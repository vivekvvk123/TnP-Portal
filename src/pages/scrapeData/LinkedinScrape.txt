import json
import requests
from datetime import datetime
import time
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

LINKEDIN_API_ENDPOINT = "https://api.linkedin.com/v2/chaitanyad48"
API_KEY = "AIzaSyDk9h-Uvh47XkHk2H-pXb1aSmlM2qRy-Qc"  
HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json",
    "Accept": "application/json",
}

def load_alumni_data(file_path='alumniData.json'):
    try:
        with open(file_path, 'r') as file:
            data = json.load(file)
        return data
    except Exception as e:
        logger.error("Error loading alumni data: %s", e)
        return []

def save_alumni_data(data, file_path='alumniData.json'):
    try:
        with open(file_path, 'w') as file:
            json.dump(data, file, indent=4)
        logger.info("Alumni data updated successfully.")
    except Exception as e:
        logger.error("Error saving alumni data: %s", e)

def fetch_current_company(linkedin_url):
    time.sleep(1)
    
    company_data = {
        'https://www.linkedin.com/in/saksham-mahajan/': 'Goldman Sachs',
        'https://www.linkedin.com/in/johndoe/': 'Microsoft',
        'https://www.linkedin.com/in/janesmith/': 'Google',
    }
    
    current_company = company_data.get(linkedin_url, "Unknown")
    
    logger.info("Fetched company '%s' for LinkedIn URL: %s", current_company, linkedin_url)
    return current_company

def update_alumni_companies(alumni_data):
    for alumni in alumni_data:
        linkedin_url = alumni.get('linkedin_url')
        
        if not linkedin_url:
            logger.warning("No LinkedIn URL found for %s", alumni.get('name', 'Unknown'))
            continue
        
        current_company = fetch_current_company(linkedin_url)
        
        alumni['company'] = current_company
        alumni['last_updated'] = datetime.now().isoformat()
        logger.info("Updated %s's company to '%s'", alumni.get('name'), current_company)

# Main function to load data, update companies, and save changes
def main():
    alumni_data = load_alumni_data()
    update_alumni_companies(alumni_data)
    save_alumni_data(alumni_data)

if __name__ == "__main__":
    main()
